org: andymarch
app: atkomail-api
service: atkomail-api

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  logRetentionInDays: 30
  environment:
    BUCKET: ${file(./config.${opt:stage, self:provider.stage, 'dev'}.json):bucket-name}
    ISSUER: ${file(./config.${opt:stage, self:provider.stage, 'dev'}.json):issuer-uri}
    AUDIENCE: ${file(./config.${opt:stage, self:provider.stage, 'dev'}.json):audience}
    ORIGINS: ${file(./config.${opt:stage, self:provider.stage, 'dev'}.json):origins}
    FIXED_AUTH_SECRET: ${file(./config.${opt:stage, self:provider.stage, 'dev'}.json):fixed-secret}
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 's3:ListBucket'
            - 's3:GetObject'
            - 's3:PutObject'
            - 's3:DeleteObject'
          Resource: "arn:aws:s3:::atkoemail"

resources:
  Resources:
    GatewayResponseDefault4XX: 
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX: 
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseBadParam: 
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: BAD_REQUEST_PARAMETERS
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseNotFound: 
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: RESOURCE_NOT_FOUND
        RestApiId:
          Ref: 'ApiGatewayRestApi'
                          

functions:
  #Authorizers
  auth:
    handler: src/authorizer/handler.auth
  fixed:
    handler: src/authorizer/handler.fixed

  #Internal Lambda
  sort:
    handler: src/mailroom/s3.sort

  #Public API
  list:
    handler: src/mail/list.handler
    events:
      - http:
          path: /mail/{email}
          method: get
          cors: true
          authorizer:
            name: auth
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$
  get:
    handler: src/mail/get.handler
    events:
      - http:
          path: /mail/{email}/{id}
          method: get
          cors: true
          authorizer:
            name: auth
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$
  delete:
    handler: src/mail/delete.handler
    events:
      - http:
          path: /mail/{email}/{id}
          method: delete
          cors: true
          authorizer:
            name: auth
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$
  deleteAll:
    handler: src/mail/deleteAll.handler
    events:
      - http:
          path: /mail/{email}
          method: delete
          cors: true
          authorizer:
            name: auth
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$
  registrationHook:
    handler: src/events/registration.handler
    events:
      - http:
          path: /events/registration
          method: post
          authorizer:
            name: fixed
            identitySource: method.request.header.Authorization

