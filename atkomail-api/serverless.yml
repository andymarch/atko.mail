org: andymarch
app: atkomail-api
service: atkomail-api

frameworkVersion: '2'
	
provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  logRetentionInDays: 30
  websocketsApiName: atkomail-websocket
  websocketsApiRouteSelectionExpression: $request.body.action 
  logs:
    websocket: true
  environment:
    BUCKET: ${param:bucket-name}
    ISSUER: ${param:issuer-uri}
    AUDIENCE: ${param:audience}
    ORIGINS: ${param:origins}
    FIXED_AUTH_SECRET: ${param:fixed-secret}
    DYNAMO_TABLE_NAME: { "Ref": "notifications" }
    WEBSOCKET_API_ENDPOINT: !Join ['', [!Ref WebsocketsApi, '.execute-api.', "${self:provider.region}", '.amazonaws.com/', "${opt:stage, self:provider.stage, 'dev'}"]]
    MIX_PANEL_TOKEN: ${param:mix-panel-token}
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 's3:ListBucket'
            - 's3:GetObject'
            - 's3:PutObject'
            - 's3:DeleteObject'
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:UpdateItem
            - ssm:GetParameter
          Resource: 
            - "arn:aws:s3:::atkoemail"
            - { "Fn::GetAtt": ["notifications", "Arn"] }
            - "arn:aws:ssm:${self:provider.region}:${param:aws-account-id}:parameter/${param:event-service-secretname}"

resources:
  Resources:
    GatewayResponseDefault4XX: 
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX: 
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseBadParam: 
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: BAD_REQUEST_PARAMETERS
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseNotFound: 
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: RESOURCE_NOT_FOUND
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    notifications:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
          - AttributeName: ttl
            AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TimeToLiveSpecification: 
          AttributeName: ttl
          Enabled: true
                          

functions:
  #Authorizers
  auth:
    handler: src/authorizer/handler.auth
  fixed:
    handler: src/authorizer/handler.fixed

  #Internal Lambda
  sort:
    handler: src/mailroom/s3.sort

  #Public API
  list:
    handler: src/mail/list.handler
    events:
      - http:
          path: /mail/{email}
          method: get
          cors: true
          authorizer:
            name: auth
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$
  get:
    handler: src/mail/get.handler
    events:
      - http:
          path: /mail/{email}/{id}
          method: get
          cors: true
          authorizer:
            name: auth
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$
  delete:
    handler: src/mail/delete.handler
    events:
      - http:
          path: /mail/{email}/{id}
          method: delete
          cors: true
          authorizer:
            name: auth
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$
  deleteAll:
    handler: src/mail/deleteAll.handler
    events:
      - http:
          path: /mail/{email}
          method: delete
          cors: true
          authorizer:
            name: auth
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$
  registrationHook:
    handler: src/events/registration.handler
    events:
      - http:
          path: /events/registration
          method: post
          authorizer:
            name: fixed
            identitySource: method.request.header.Authorization
  verifyEventHook:
    handler: src/events/verifyEvent.handler
    events:
      - http:
          path: /events/userProfileEvent
          method: get
          authorizer:
            name: fixed
            identitySource: method.request.header.Authorization
  userProfileEvent:
    handler: src/events/userProfileEvent.handler
    environment:
      CLIENT_ID: ${param:event-service-clientid}
      EVENT_SERVICE_SECRET_NAME:  ${param:event-service-secretname}
    events:
      - http:
          path: /events/userProfileEvent
          method: post
          authorizer:
            name: fixed
            identitySource: method.request.header.Authorization

  # Websocket
  connectionHandler:
    handler: src/websocket/connectionHandler.handler
    events:
      - websocket:
          route: $connect
          #authorizer: auth
      - websocket:
          route: $disconnect
  defaultHandler:
    handler: src/websocket/defaultHandler.handler
    events:
      - websocket: $default